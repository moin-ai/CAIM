{% extends '@nucleus/partials/particle.html.twig' %}

{% block stylesheets %}
{% if particle.particle_title_color or particle.particle_title_fontsize or (particle.parallax_image and particle.container_maxwidth == 'custom' and particle.bg_container_width is not empty) %}
<style>
{% if particle.particle_title_color or particle.particle_title_fontsize %}
#el-{{ id }}.g5-title { {% if particle.particle_title_color %}color: {{ particle.particle_title_color }};{% endif %}{% if particle.particle_title_fontsize %} font-size: {{particle.particle_title_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.parallax_image and particle.container_maxwidth == 'custom' and particle.bg_container_width is not empty %}
#{{ id }}-particle .g-container {
    max-width: {{ particle.bg_container_width|e }};
}
{% endif %}
</style>
{% endif %}
{% endblock %}

{% block javascript %}
{% if (particle.animation == 'parallax' or particle.bg_image_effect == 'parallax') %}
    <script src="{{ url('gantry-theme://js/jlcomponents/parallax.min.js') }}"></script>
{% endif %}
{% endblock %}

{# Set Viewport Height #}
{% if particle.viewport_height == 'full' %}
    {% set viewport_height = ' jl-height-viewport="offset-top: true;"' %}
{% elseif particle.viewport_height == 'percent' %}
    {% set viewport_height = ' jl-height-viewport="offset-top: true; offset-bottom: 20;"' %}
{% elseif particle.viewport_height == 'section' %}
    {% set viewport_height = ' jl-height-viewport="offset-top: true; offset-bottom: 50;"' %}
{% elseif particle.viewport_height == 'expand' %}
    {% set viewport_height = ' jl-height-viewport="expand: true;"' %}
{% endif %}

{# Set Padding #}
{% if particle.padding == 'default' %}
    {% set padding = ' jl-section' %}
{% elseif particle.padding == 'none' %}
    {% set padding = ' jl-section jl-padding-remove-vertical' %}
{% else %}
    {% set padding = ' jl-section jl-section-' ~ particle.padding|e %}
{% endif %}

{# Set Background color #}
{% set parallax_bg_color = particle.parallax_bg_color ? 'style="background-color: ' ~ particle.parallax_bg_color ~ ';"' %}
{% set parallax_overlay = (particle.parallax_bg_overlay ? '<div class="jl-position-cover" style="background-color: '~ particle.parallax_bg_overlay ~';"></div>') %}

{# Set Max-Width Content #}
{% set content_maxwidth %}
{% if particle.g_maxwidth != 'inherit' %} jl-width-{{particle.g_maxwidth}}{% if particle.g_maxwidth_breakpoint != 'always' %}@{{particle.g_maxwidth_breakpoint}}{% endif %}{% if particle.g_maxwidth_alignment == 'left' %}{% elseif particle.g_maxwidth_alignment == 'center' %} jl-margin-auto{% else %} jl-margin-auto-left{% endif %}{% endif %}
{% endset %}

{# Start Background Wrapper #}
{% set parallax_background %}
{% if particle.parallax_image %}
{% set bg_container_maxwidth = particle.container_maxwidth == 'custom' or particle.container_maxwidth == 'default' ? 'g-container' : 'jl-container' ~ (particle.container_maxwidth in ['small', 'large', 'xlarge', 'expand'] ? ' jl-container-' ~ particle.container_maxwidth|e) %}
{% if (particle.bg_image_effect == 'parallax' and (particle.horizontal_start or particle.horizontal_end or particle.vertical_start or particle.vertical_end or particle.parallax_easing)) %}
{% set parallax_bg_horizontal %}
{% if particle.horizontal_start or particle.horizontal_end %}bgx: {{ particle.horizontal_start ? particle.horizontal_start : '0' }},{{ particle.horizontal_end ? particle.horizontal_end : '0' }};{% endif %}
{% endset %}
{% set parallax_bg_vertical %}
{% if particle.vertical_start or particle.vertical_end %}bgy: {{ particle.vertical_start ? particle.vertical_start : '0' }},{{ particle.vertical_end ? particle.vertical_end : '0' }};{% endif %}
{% endset %}
{% set parallax_easing = particle.parallax_easing ? 'easing:' ~ particle.parallax_easing %}
{% set bgp_animation_cls = ' jl-parallax="' ~ parallax_bg_horizontal ~ parallax_bg_vertical ~ (particle.parallax_bg_breakpoint != 'always' ? ' media: @'~ particle.parallax_bg_breakpoint ~'' : '') ~ parallax_easing ~ '"' %}
{% endif %}
<div data-src="{{ url(particle.parallax_image)|e }}"{% if particle.bg_image_loading %} loading="eager"{% endif %} jl-img class="jl-wrapper jl-background-norepeat{{ particle.parallax_bg_overlay ? ' jl-position-relative' : '' }}{{ particle.bg_image_effect == 'fixed' ? ' jl-background-fixed' : '' }}{{ padding }} jl-background-{{particle.background_image_position|e}}{% if particle.background_image_size != 'auto' %} jl-background-{{particle.background_image_size|e}}{% endif %}{% if particle.parallax_bg_visibility != 'always' %} jl-background-image@{{particle.parallax_bg_visibility|e}}{% endif %}{% if particle.vertical_alignment != 'none' and particle.viewport_height != 'none' %} jl-flex jl-flex-{{ particle.vertical_alignment|e }}{% endif %}{% if particle.parallax_text_color != 'default' %} jl-{{particle.parallax_text_color|e}}{% endif %}{% if particle.blendmode != 'inherit' %} jl-background-blend-{{particle.blendmode|e}}{% endif %}" {{parallax_bg_color|default('')|raw}}{{ bgp_animation_cls|raw }}{{viewport_height|raw}}>
{{ parallax_overlay|raw }}
    <div class="{{ bg_container_maxwidth }}{{ particle.parallax_bg_overlay ? ' jl-position-relative' : '' }}">
        <div class="el-content"> 
{% endif %}
{% endset %}
{# End Background Wrapper #}
{% set end_parallax_background %}
{% if particle.parallax_image %}
        </div>
    </div>
</div>
{% endif %}
{% endset %}

{# Set Horizontal #}
{% set pahorizontal %}
{% if particle.pa_horizontal_start or particle.pa_horizontal_end %}x: {{ particle.pa_horizontal_start ? particle.pa_horizontal_start : '0' }},{{ particle.pa_horizontal_end ? particle.pa_horizontal_end : '0' }};{% endif %}
{% endset %}

{# Set Vertical #}
{% set pavertical %}
{% if particle.pa_vertical_start or particle.pa_vertical_end %}y: {{ particle.pa_vertical_start ? particle.pa_vertical_start : '0' }},{{ particle.pa_vertical_end ? particle.pa_vertical_end : '0' }};{% endif %}
{% endset %}

{# Set Scale #}
{% set scale %}
{% if particle.scale_start or particle.scale_end %}scale: {{ particle.scale_start ? particle.scale_start : '1' }},{{ particle.scale_end ? particle.scale_end : '1' }};{% endif %}
{% endset %}

{# Set Rotate #}
{% set rotate %}
{% if particle.rotate_start or particle.rotate_end %}rotate: {{ particle.rotate_start ? particle.rotate_start : '0' }},{{ particle.rotate_end ? particle.rotate_end : '0' }};{% endif %}
{% endset %}

{# Set Opacity #}
{% set opacity %}
{% if particle.opacity_start or particle.opacity_end %}opacity: {{ particle.opacity_start ? particle.opacity_start : '1' }},{{ particle.opacity_end ? particle.opacity_end : '1' }};{% endif %}
{% endset %}

{# Set Animation #}
{% set animation %}
{% if particle.animation == 'parallax' %}
{% set pa_z_index = particle.pa_z_index ? ' jl-position-z-index jl-position-relative' %}
{% set parallax_transform_origin = particle.parallax_transform_origin != 'center-center' ? ' jl-transform-origin-' ~ particle.parallax_transform_origin|e %}
{% if particle.pa_horizontal_start or particle.pa_horizontal_end or particle.pa_vertical_start or particle.pa_vertical_end or particle.scale_start or particle.scale_end or particle.rotate_start or particle.rotate_end or particle.opacity_start or particle.opacity_end or particle.easing or particle.parallax_start or particle.parallax_end or particle.pa_breakpoint %} jl-parallax="{{ pahorizontal ~ pavertical ~ scale ~ rotate ~ opacity }}{% if particle.easing %}easing: {{ particle.easing|e }};{% endif %}{% if particle.parallax_start %}start: {{ particle.parallax_start|e }};{% endif %}{% if particle.parallax_end %}end: {{ particle.parallax_end|e }};{% endif %}{% if particle.pa_breakpoint != 'always' %}media: @{{particle.pa_breakpoint|e}}{% endif %}"{% endif %}
{% elseif particle.animation != 'inherit' %}
 jl-scrollspy="cls: jl-animation-{{particle.animation|e}};{% if particle.animation_repeat == 'enabled' %} repeat: true;{% endif %}{% if particle.animation_delay %} delay: {{particle.animation_delay|e}};{% endif %}"
{% endif %}
{% endset %}

{# Set Particle Alignment #}
{% set particle_alignment %}
{% if particle.align != 'inherit' %} jl-text-{{particle.align|e}}{% if particle.breakpoint != 'always' %}@{{particle.breakpoint|e}}{% endif %}{% endif %}{% if particle.align != 'inherit' and particle.breakpoint != 'always' %}{% if particle.fallback != 'inherit' %} jl-text-{{particle.fallback|e}}{% endif %}{% endif %}
{% endset %}

{# set Particle Title Style #}
{% set particle_title_style %}
{% if particle.particle_title %}
<{{ particle.particle_title_element|e }} id="el-{{ id }}" class="g5-title{% if particle.particle_title_align != 'inherit' %} jl-text-{{particle.particle_title_align|e}}{% endif %}{% if particle.particle_predefined_color != 'default' %} jl-text-{{particle.particle_predefined_color|e}}{% endif %}{% if particle.particle_title_style != 'default' %} jl-{{particle.particle_title_style|e}}{% endif %}{% if particle.particle_title_decoration != 'none' %} jl-heading-{{particle.particle_title_decoration|e}}{% endif %}{% if particle.particle_title_text_transform %} jl-text-{{particle.particle_title_text_transform|e}}{% endif %}{% if particle.particle_title_font_weight %} jl-text-{{particle.particle_title_font_weight|e}}{% endif %}">
{% if particle.particle_title_decoration == 'line' %} <span>{{particle.particle_title|raw}}</span>
{% else %} {{particle.particle_title|raw}}
{% endif %}
</{{ particle.particle_title_element|e }}>
{% endif %}
{% endset %}

{# Set Link Scroll #}
{% set linkscroll = particle.link|e matches '/#/' and particle.target == '_self' ? ' jl-scroll' %}

{% set extra_shadow = particle.link is empty and particle.image_popup is empty and particle.extra_shadow ? ' jl-box-shadow-bottom' %}

{# Set Image Width/Height #}
{% set image_width = particle.image_width ? ' width="' ~ particle.image_width ~ '"' %}
{% set image_height = particle.image_height ? ' height="' ~ particle.image_height ~ '"' %}

{# Image Styles #}
{% set image_transition = (particle.image_transition and (particle.link or particle.image_popup)) ? ' jl-transition-' ~ particle.image_transition|e ~ ' jl-transition-opaque' %}
{% set image_border_cls = particle.border != 'none' ? ' jl-border-' ~ particle.border|e %}
{% set img_boxshadow = particle.box_shadow != 'none' ? ' jl-box-shadow-' ~ particle.box_shadow|e %}
{% set img_boxshadow_hover = (particle.box_shadow_hover != 'none' and particle.link) ? ' jl-box-shadow-hover-' ~ particle.box_shadow_hover|e %}
{% set image_size = particle.image_width is empty and particle.image_height is empty ? ' ' ~ particle.image|imagesize : '' %}

{# Set Lightbox #}
{% set link_transition = particle.link and particle.image_transition ? ' jl-inline-clip jl-transition-toggle' %}

{# Set Visibility #}
{% if particle.visibility != 'inherit' %}
{% set visibility = particle.visibility in ['s', 'm', 'l', 'xl'] ? ' jl-visible@' ~ particle.visibility|e : ' jl-' ~ particle.visibility|replace({'-': '@'}) %}
{% endif %}

{# Set Margin #}
{% if particle.margin != 'inherit' %}
{% set margin = particle.margin != 'default' ? ' jl-margin-' ~ particle.margin|e : ' jl-margin' %}
{% endif %}

{% set image_loading = particle.image_loading == false ? ' loading="lazy"' %}

{% block particle %}
{% if particle.enabled %}
{{ parallax_background }}
{{ particle_title_style }}
<div id="{{ id }}" class="{{ id ~ content_maxwidth ~ extra_shadow ~ particle_alignment ~ pa_z_index ~ parallax_transform_origin ~ margin ~ visibility }}{% if particle.class %} {{ particle.class }}{% endif %}"{{ animation }}>
  
  {% if particle.link or particle.target == 'modal' %}
    <a class="tm-link{{ particle.extra_shadow ? ' jl-box-shadow-bottom' : '' }}{{ image_border_cls ~ img_boxshadow ~ img_boxshadow_hover ~ link_transition }}"{% if particle.target == 'modal' %} href="#{{ id }}" jl-toggle{% else %} href="{{ particle.link|e }}" target="{{ particle.target|default('_self')|e }}"{{ linkscroll }}{% endif %}>
  {% endif %}

  <img src="{{ url(particle.image)|e }}"{{ image_width|raw }}{{ image_height|raw }}{{ image_size|raw }} alt="{{ particle.image_alt|e }}" class="tm-image{{ image_transition }}{% if particle.link is empty %}{{ image_border_cls }}{{ img_boxshadow }}{{ img_boxshadow_hover }}{% endif %}"{{ image_loading|raw }}>

  {% if particle.link or particle.target == 'modal' %}
    </a>
  {% endif %}

  {% if particle.target == 'modal' %}
  <div id="{{ id }}" class="jl-flex-top jl-modal" jl-modal>
    <div class="jl-modal-dialog{% if particle.md_title or particle.md_content %} jl-modal-body{% endif %}{% if particle.center_modal %} jl-margin-auto-vertical{% endif %}">
    <button class="jl-modal-close-{{particle.close_button}}" type="button" jl-close></button>
      {% if particle.md_title or particle.md_content %}
			{% if particle.md_title %}
			<{{particle.title_element|e}} class="jl-modal-title{% if particle.title_color != 'default' %} jl-text-{{particle.title_color|e}}{% endif %}{% if particle.title_style != 'default' %} jl-{{particle.title_style|e}}{% endif %}{% if particle.title_decoration != 'none' %} jl-heading-{{particle.title_decoration|e}}{% endif %}">
			{% if particle.title_decoration == 'line' %} <span>{{ particle.md_title|raw }}</span>
			{% else %}
			{{ particle.md_title|raw }}
			{% endif %}
			</{{particle.title_element|e}}>
			{% endif %}
			<div class="jl-margin-{{ particle.content_margin_top == 'default' ? 'top' : particle.content_margin_top|e ~ '-top' }}{% if particle.content_style != 'default' %} jl-text-{{ particle.content_style|e }}{% endif %}">
        {% set md_content = particle.twig ? gantry.theme.compile(particle.md_content) : particle.md_content %}
        {{ (particle.filter ? gantry.platform.filter(md_content) : md_content)|html|raw }}
			</div>
      {% else %}
      <img src="{{ url(particle.image)|e }}"{{ image_size|raw }} class="tm-image" alt="{{ particle.image_alt|e }}">
  {% endif %}
    </div>
    </div>
  {% endif %}

</div>
{{ end_parallax_background }}
{% endif %}
{% endblock %}
