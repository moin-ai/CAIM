{% extends '@nucleus/partials/particle.html.twig' %}

{% block stylesheets %}
{% if particle.particle_title_color or particle.particle_title_fontsize or particle.title_color or particle.title_fontsize or particle.subtitle_color or particle.subtitle_fontsize or particle.decoration_color or particle.decoration_width or (particle.parallax_image and particle.container_maxwidth == 'custom' and particle.bg_container_width is not empty) %}
<style>
{% if particle.particle_title_color or particle.particle_title_fontsize %}
#el-{{ id }}.g5-title { {% if particle.particle_title_color %}color: {{ particle.particle_title_color }};{% endif %}{% if particle.particle_title_fontsize %}font-size: {{particle.particle_title_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.title_color or particle.title_fontsize %}
.{{ id }} .tm-title { {% if particle.title_color %}color: {{particle.title_color}}; {% endif %}{% if particle.title_fontsize %}font-size: {{particle.title_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.subtitle_color or particle.subtitle_fontsize %}
.{{ id }} .tm-description { {% if particle.subtitle_color %}color: {{particle.subtitle_color}}; {% endif %}{% if particle.subtitle_fontsize %}font-size: {{particle.subtitle_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.decoration_color %}
{% set decoration_divider_color = ' border-color: ' ~ particle.decoration_color ~ ';' %}
{% set decoration_bullet_color = ' border-left-color: ' ~ particle.decoration_color ~ ';' %}
{% set decoration_line_color = ' border-bottom-color: ' ~ particle.decoration_color ~ ';' %}
{% endif %}
{% if particle.decoration_width %}
{% set decoration_width = 'border-width: ' ~ particle.decoration_width ~ 'px;' %}
{% endif %}
{% if particle.decoration == 'divider' and (particle.decoration_color or particle.decoration_width ) %}
.{{ id }} .jl-heading-divider { {{ decoration_divider_color ~ decoration_width }} }
{% endif %}
{% if particle.decoration == 'bullet' and (particle.decoration_color or particle.decoration_width ) %}
.{{ id }} .jl-heading-bullet::before { {{ decoration_bullet_color ~ decoration_width }} }
{% endif %}
{% if particle.decoration == 'line' and (particle.decoration_color or particle.decoration_width ) %}
.{{ id }} .jl-heading-line>::after, .{{ id }} .jl-heading-line>::before { {{ decoration_line_color ~ decoration_width }} }
{% endif %}
{% if particle.parallax_image and particle.container_maxwidth == 'custom' and particle.bg_container_width is not empty %}
.{{ id }}-particle .g-container {
    max-width: {{ particle.bg_container_width|e }};
}
{% endif %}
</style>
{% endif %}
{% endblock %}

{% block javascript %}
{% if (particle.animation == 'parallax' or particle.bg_image_effect == 'parallax') %}
    <script src="{{ url('gantry-theme://js/jlcomponents/parallax.min.js') }}"></script>
{% endif %}
{% endblock %}

{# Set Link Scroll #}
{% set linkscroll = particle.title_link|e matches '/#/' and particle.title_link_target != '_blank' ? ' jl-scroll' %}

{# Set Title/Content Text Transform #}
{% set title_text_transform = particle.title_text_transform ? ' jl-text-' ~ particle.title_text_transform|e %}
{% set content_text_transform = particle.content_text_transform ? ' jl-text-' ~ particle.content_text_transform|e %}
{% set title_font_weight = particle.title_font_weight ? ' jl-text-' ~ particle.title_font_weight|e %}
{% set meta_font_weight = particle.meta_font_weight ? ' jl-text-' ~ particle.meta_font_weight|e %}
{% set des_dropcap = particle.description_dropcap ? ' jl-dropcap' %}

{# Set Title#}
{% set title %}
{% if particle.title %}
<{{particle.titletag|e}} class="tm-title jl-margin-remove-bottom{{ title_text_transform ~ title_font_weight }}{% if particle.heading_color %} jl-text-{{particle.heading_color|e}}{% endif %}{% if particle.decoration %} jl-heading-{{particle.decoration|e}}{% endif %}{% if particle.style != 'default' %} jl-{{particle.style|e}}{% endif %}">
{% if particle.title_link != '' %}<a target="{{ particle.title_link_target|default('_self')|e }}" href="{{ url(particle.title_link|e) }}" class="{% if particle.link_hover %}jl-link-heading{% else %}jl-link-reset{% endif %}"{{ linkscroll }}>{% endif %}
  {% if particle.decoration == 'line' %}<span>{{particle.title|raw}}</span>{% else %}{{particle.title|raw}}{% endif %}
  {% if particle.title_link != '' %}</a>{% endif %}
</{{particle.titletag|e}}>
{% endif %}
{% endset %}

{# Set Subtitle #}
{% set subtitle %}
{% if particle.subtitle %}
  <div class="tm-description{{ content_text_transform ~ meta_font_weight ~ des_dropcap }}{% if particle.description_style != 'default' %} jl-{{ particle.description_style|e }}{% endif %}{% if particle.description_margin_top == 'default' %} jl-margin-top{% else %} jl-margin-{{ particle.description_margin_top|e }}-top{% endif %}{% if particle.description_color != 'default' %} jl-text-{{ particle.description_color|e }}{% endif %}">
    {{ particle.subtitle|raw }}
  </div>
{% endif %}
{% endset %}

{# Set Viewport Height #}
{% if particle.viewport_height == 'full' %}
    {% set viewport_height = ' jl-height-viewport="offset-top: true;"' %}
{% elseif particle.viewport_height == 'percent' %}
    {% set viewport_height = ' jl-height-viewport="offset-top: true; offset-bottom: 20;"' %}
{% elseif particle.viewport_height == 'section' %}
    {% set viewport_height = ' jl-height-viewport="offset-top: true; offset-bottom: 50;"' %}
{% elseif particle.viewport_height == 'expand' %}
    {% set viewport_height = ' jl-height-viewport="expand: true;"' %}
{% endif %}

{# Set Padding #}
{% if particle.padding == 'default' %}
    {% set padding = ' jl-section' %}
{% elseif particle.padding == 'none' %}
    {% set padding = ' jl-section jl-padding-remove-vertical' %}
{% else %}
    {% set padding = ' jl-section jl-section-' ~ particle.padding|e %}
{% endif %}

{# Set Background color #}
{% set parallax_bg_color = particle.parallax_bg_color ? 'style="background-color: ' ~ particle.parallax_bg_color ~ ';"' %}
{% set parallax_overlay = (particle.parallax_bg_overlay ? '<div class="jl-position-cover" style="background-color: '~ particle.parallax_bg_overlay ~';"></div>') %}

{# Set Max-Width Content #}
{% set content_maxwidth %}
{% if particle.g_maxwidth %} jl-width-{{particle.g_maxwidth}}{% if particle.g_maxwidth_breakpoint %}@{{particle.g_maxwidth_breakpoint}}{% endif %}{% if particle.g_maxwidth_alignment == 'left' %}{% elseif particle.g_maxwidth_alignment == 'center' %} jl-margin-auto{% else %} jl-margin-auto-left{% endif %}{% endif %}
{% endset %}

{# Start Background Wrapper #}
{% set parallax_background %}
{% if particle.parallax_image %}
{% set bg_container_maxwidth = particle.container_maxwidth == 'custom' or particle.container_maxwidth == 'default' ? 'g-container' : 'jl-container' ~ (particle.container_maxwidth in ['small', 'large', 'xlarge', 'expand'] ? ' jl-container-' ~ particle.container_maxwidth|e) %}
{% if (particle.bg_image_effect == 'parallax' and (particle.horizontal_start or particle.horizontal_end or particle.vertical_start or particle.vertical_end or particle.parallax_easing)) %}
{% set parallax_bg_horizontal %}
{% if particle.horizontal_start or particle.horizontal_end %}bgx: {{ particle.horizontal_start ? particle.horizontal_start : '0' }},{{ particle.horizontal_end ? particle.horizontal_end : '0' }};{% endif %}
{% endset %}
{% set parallax_bg_vertical %}
{% if particle.vertical_start or particle.vertical_end %}bgy: {{ particle.vertical_start ? particle.vertical_start : '0' }},{{ particle.vertical_end ? particle.vertical_end : '0' }};{% endif %}
{% endset %}
{% set parallax_easing = particle.parallax_easing ? 'easing:' ~ particle.parallax_easing %}
{% set bgp_animation_cls = ' jl-parallax="' ~ parallax_bg_horizontal ~ parallax_bg_vertical ~ (particle.parallax_bg_breakpoint != 'always' ? ' media: @'~ particle.parallax_bg_breakpoint ~'' : '') ~ parallax_easing ~ '"' %}
{% endif %}
<div data-src="{{ url(particle.parallax_image)|e }}"{% if particle.bg_image_loading %} loading="eager"{% endif %} jl-img class="jl-wrapper jl-background-norepeat{{ particle.parallax_bg_overlay ? ' jl-position-relative' : '' }}{{ particle.bg_image_effect == 'fixed' ? ' jl-background-fixed' : '' }}{{ padding }} jl-background-{{particle.background_image_position|e}}{% if particle.background_image_size != 'auto' %} jl-background-{{particle.background_image_size|e}}{% endif %}{% if particle.parallax_bg_visibility != 'always' %} jl-background-image@{{particle.parallax_bg_visibility|e}}{% endif %}{% if particle.vertical_alignment != 'none' and particle.viewport_height != 'none' %} jl-flex jl-flex-{{ particle.vertical_alignment|e }}{% endif %}{% if particle.parallax_text_color != 'default' %} jl-{{particle.parallax_text_color|e}}{% endif %}{% if particle.blendmode != 'inherit' %} jl-background-blend-{{particle.blendmode|e}}{% endif %}" {{parallax_bg_color|default('')|raw}}{{ bgp_animation_cls|raw }}{{viewport_height|raw}}>
{{ parallax_overlay|raw }}
    <div class="{{ bg_container_maxwidth }}{{ particle.parallax_bg_overlay ? ' jl-position-relative' : '' }}">
        <div class="el-content"> 
{% endif %}
{% endset %}
{# End Background Wrapper #}
{% set end_parallax_background %}
{% if particle.parallax_image %}
        </div>
    </div>
</div>
{% endif %}
{% endset %}

{# Set Horizontal #}
{% set pahorizontal %}
{% if particle.pa_horizontal_start or particle.pa_horizontal_end %}x: {{ particle.pa_horizontal_start ? particle.pa_horizontal_start : '0' }},{{ particle.pa_horizontal_end ? particle.pa_horizontal_end : '0' }};{% endif %}
{% endset %}

{# Set Vertical #}
{% set pavertical %}
{% if particle.pa_vertical_start or particle.pa_vertical_end %}y: {{ particle.pa_vertical_start ? particle.pa_vertical_start : '0' }},{{ particle.pa_vertical_end ? particle.pa_vertical_end : '0' }};{% endif %}
{% endset %}

{# Set Scale #}
{% set scale %}
{% if particle.scale_start or particle.scale_end %}scale: {{ particle.scale_start ? particle.scale_start : '1' }},{{ particle.scale_end ? particle.scale_end : '1' }};{% endif %}
{% endset %}

{# Set Rotate #}
{% set rotate %}
{% if particle.rotate_start or particle.rotate_end %}rotate: {{ particle.rotate_start ? particle.rotate_start : '0' }},{{ particle.rotate_end ? particle.rotate_end : '0' }};{% endif %}
{% endset %}

{# Set Opacity #}
{% set opacity %}
{% if particle.opacity_start or particle.opacity_end %}opacity: {{ particle.opacity_start ? particle.opacity_start : '1' }},{{ particle.opacity_end ? particle.opacity_end : '1' }};{% endif %}
{% endset %}

{# Set Animation #}
{% set animation %}
{% if particle.animation == 'parallax' %}
{% set pa_z_index = particle.pa_z_index ? ' jl-position-z-index jl-position-relative' %}
{% set parallax_transform_origin = particle.parallax_transform_origin != 'center-center' ? ' jl-transform-origin-' ~ particle.parallax_transform_origin|e %}
{% if particle.pa_horizontal_start or particle.pa_horizontal_end or particle.pa_vertical_start or particle.pa_vertical_end or particle.scale_start or particle.scale_end or particle.rotate_start or particle.rotate_end or particle.opacity_start or particle.opacity_end or particle.easing or particle.parallax_start or particle.parallax_end or particle.pa_breakpoint %} jl-parallax="{{ pahorizontal ~ pavertical ~ scale ~ rotate ~ opacity }}{% if particle.easing %}easing: {{ particle.easing|e }};{% endif %}{% if particle.parallax_start %}start: {{ particle.parallax_start|e }};{% endif %}{% if particle.parallax_end %}end: {{ particle.parallax_end|e }};{% endif %}{% if particle.pa_breakpoint != 'always' %}media: @{{particle.pa_breakpoint|e}}{% endif %}"{% endif %}
{% elseif particle.animation %}
 jl-scrollspy="cls: jl-animation-{{ particle.animation|e }};{% if particle.animation_repeat == 'enabled' %} repeat: true;{% endif %}{% if particle.animation_delay %} delay: {{particle.animation_delay|e}};{% endif %}"
{% endif %}
{% endset %}

{# Set Particle Alignment #}
{% set particle_alignment %}
{% if particle.align != 'inherit' %} jl-text-{{particle.align|e}}{% if particle.breakpoint != 'always' %}@{{particle.breakpoint|e}}{% endif %}{% endif %}{% if particle.align != 'inherit' and particle.breakpoint != 'always' %}{% if particle.fallback != 'inherit' %} jl-text-{{particle.fallback|e}}{% endif %}{% endif %}
{% endset %}

{# set Particle Title Style #}
{% set particle_title_style %}
{% if particle.particle_title %}
<{{ particle.particle_title_element|e }} id="el-{{ id }}" class="g5-title{% if particle.particle_title_align != 'inherit' %} jl-text-{{particle.particle_title_align|e}}{% endif %}{% if particle.particle_predefined_color != 'default' %} jl-text-{{particle.particle_predefined_color|e}}{% endif %}{% if particle.particle_title_style != 'default' %} jl-{{particle.particle_title_style|e}}{% endif %}{% if particle.particle_title_decoration != 'none' %} jl-heading-{{particle.particle_title_decoration|e}}{% endif %}{% if particle.particle_title_text_transform %} jl-text-{{particle.particle_title_text_transform|e}}{% endif %}{% if particle.particle_title_font_weight %} jl-text-{{particle.particle_title_font_weight|e}}{% endif %}">
{% if particle.particle_title_decoration == 'line' %} <span>{{particle.particle_title|raw}}</span>
{% else %} {{particle.particle_title|raw}}
{% endif %}
</{{ particle.particle_title_element|e }}>
{% endif %}
{% endset %}

{# Set Visibility #}
{% if particle.visibility != 'inherit' %}
{% set visibility = particle.visibility in ['s', 'm', 'l', 'xl'] ? ' jl-visible@' ~ particle.visibility|e : ' jl-' ~ particle.visibility|replace({'-': '@'}) %}
{% endif %}

{# Set Margin #}
{% if particle.margin != 'inherit' %}
{% set margin = particle.margin != 'default' ? ' jl-margin-' ~ particle.margin|e : ' jl-margin' %}
{% endif %}

{% block particle %}
{% if particle.enabled and (particle.title or particle.subtitle) %}
{{ parallax_background }}
{{ particle_title_style }}
<div class="{{ id ~ content_maxwidth ~ particle_alignment ~ pa_z_index ~ parallax_transform_origin ~ margin ~ visibility }}{% if particle.class %} {{ particle.class }}{% endif %}"{{ animation }}>
    {{ title }}
    {{ subtitle }}
</div>
{{ end_parallax_background }}
{% endif %}
{% endblock %}